package rules.forward;

import  com.ftn.sbnz.model.Flight;
import  com.ftn.sbnz.model.Ticket;
import java.util.List;

global Long flightId

declare TicketAdded
    ticketId: Long
    flightId: Long
    destination: String
end

rule "Available seats on a flight"
    when
        $t: Ticket()
        $fl: Flight(id == flightId ,soldTickets.size() < numberOfSeats)
    then
        $fl.getSoldTickets().add($t);
        insert(new TicketAdded($t.getId(), $fl.getId(), $fl.getDestination()));
end

rule "New Ticket added and average occupancy on destination more than 80%"
    when
        TicketAdded($dest: destination)
        $flightList: List() from collect(Flight(destination == $dest))
        $averageOccupancy: Number(intValue >= 0.04) from accumulate(
            $fl: Flight($ticketNum: soldTickets.size(), $seatsNum: numberOfSeats) from $flightList,
            average($ticketNum / $seatsNum)
        )
        $flight: Flight() from $flightList
    then
        modify($flight) {
                    setPopular(true)
                }
        System.out.println("ALAA");
end

